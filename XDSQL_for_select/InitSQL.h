#pragma once

/*InitSQL头文件，负责*/

#ifndef INITSQL_H
#define INITSQL_H

/*******************************************************************************************************************
	函数：mkdir
	功能：在程序当前路径下创建数据库系统的文件夹
	input：void
	output：创建成功返回true，否则返回false
*******************************************************************************************************************/
bool mkdir();

/*******************************************************************************************************************
	函数：mkfile
	功能：在数据库系统目录下创建库元数据表、属于系统的表元数据表、属于系统的列元数据表
	input：void
	output：若创建文件失败，返回false；否则返回true
*******************************************************************************************************************/
bool mkfile();

/*******************************************************************************************************************
	函数：insertSYSTable
	功能：将system_db , system_table , system_col表的表元信息加入system_table表
	input：void
	output：void
*******************************************************************************************************************/
void insertSYSTable();

/*******************************************************************************************************************
	函数：insertSYSCol
	功能：将system_db , system_table , system_col表的列元信息加入system_col表
	input：void
	output：void
*******************************************************************************************************************/
void insertSYSCol();

/*******************************************************************************************************************
	函数：init
	功能：若已创建数据库系统的文件夹，不做操作；若检查发现尚未创建数据库系统文件夹，就创建数据库系统文件夹以及相关的元数据表
	input：void
	output：数据库系统已存在或成功创建数据库系统文件夹，返回true；否则返回false
*******************************************************************************************************************/
bool init();


/*
	函数：cleanFile
	功能：对所有数据表中的无效行彻底删除
	input:带有路径的文件夹名称，并且foldername后要接\\
	output：void
*/
void cleanFile(char* foldername);


#endif // !INITSQL_H
