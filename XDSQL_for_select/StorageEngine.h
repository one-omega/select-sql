#pragma once
/*
存储引擎头文件

定义存储引擎的各项对外接口和对应结构体

storageNode结构体
功能：存储引擎实例化结构体，记录文件指针、当前行数据、position函数记录的物理位置


createNode接口：创建storageNode结构体并初始化
deleteNode接口：删除storageNode结构体，释放内存

create接口：在数据库路径下创建物理文件

drop接口：删除指定物理文件

open接口：根据传入文件名打开对应文件

close接口：关闭文件

rnd_init接口：初始化读取指针

rnd_next接口：读取下一行数据

write_row接口：向表尾写入数据

position接口：记录当前指针位置

rnd_pos接口：将指针移动到输入位置

update_row接口是更新一行数据

delete_row接口是删除一行数据

*/


#ifndef STORAGEENGINE_H
#define STORAGEENGINE_H


#include<stdio.h>





	
/*storageNode结构体：储存物理文件以及相关的读写信息*/
typedef struct storageNode {
	FILE* fp;				/*文件指针，指向打开的物理文件*/

	char* currentRow;		/*当前行的内容，用字符串储存*/

	long currentpos;		/*读取指针的位置，总是在上一个读写的行的开头*/

	long rowLength;			/* 节点中currentRow字符串的长度（以字节为单位） */
	
	long position;			/**/
}storageNode;	


/*********************************************************************************************************************
	函数：stringcat
	功能：创建新的字符串，并将first和second按序拼接到该新的字符串中 
	input：字符串first，字符串second
	output：由first字符串与second字符串按序拼接成的新字符串
***********************************************************************************************************************/
char* stringcat(char* first, char* second);



/**********************************************************************************************************************
	函数：createStorageNode
	功能：创建一个StorageNode结构体，并将其内部的成员初始化
	input：void
	output：指向创建的结构体的指针
**********************************************************************************************************************/
storageNode* createStorageNode();



/*********************************************************************************************************************
	函数：deleteStorageNode
	功能：删除一个StorageNode节点
	input：指向StorageNode节点的指针
	output：void
**********************************************************************************************************************/
void deleteStorageNode(storageNode* sp);

/*********************************************************************************************************************
	函数：createDBDir
	功能：为文件夹在操作系统中创建目录
	input：文件夹名，字符串类型
	output：目录创建成功返回true，否则返回false
*********************************************************************************************************************/
bool createDBDir(char* name);


/*********************************************************************************************************************
	函数：deleteDBDir
	功能：将文件夹从操作系统中删除
	input：文件夹名，字符串类型
	output：删除成功返回true，否则返回false
*********************************************************************************************************************/
bool deleteDBDir(char* name);

/*********************************************************************************************************************
	函数：create
	功能：根据给定的文件名，在数据库系统目录下创建文件
	input：文件名，字符串类型
	output：文件创建成功返回true，否则返回false
*********************************************************************************************************************/
bool create(char* name);

/*********************************************************************************************************************
	函数：drop
	功能：给定文件名，将对应的文件从操作系统中删除
	input：文件名，字符串类型
	output：删除成功返回true，否则为false
*********************************************************************************************************************/
bool drop(char* name);

/*************************************************************************************************************
	函数：open
	功能：打开文件名对应的文件（若文件不存在会自动创建），并根据文件对storageNode节点中的成员赋值，使storageNode节点储存该文件的信息
	input：指向storageNode节点的指针、文件名（字符串类型）、文件中元组的长度（以字节为单位）
	output：节点赋值成功返回true，否则返回false
*************************************************************************************************************/
bool open(storageNode* sp,char* name,long rowLength);

/*************************************************************************************************************
	函数：close
	功能：关闭sp结构体对应的文件，并将sp结构体中的currentRow字符串删除
	input：指向storageNode节点的指针
	output：void
*************************************************************************************************************/
void close(storageNode* sp);

/************************************************************************************************************
	函数：rnd_init
	功能：初始化读写指针，使stream位置位于文件开头
	input：指向storageNode节点的指针
	output：void
*************************************************************************************************************/
void rnd_init(storageNode* sp);

/************************************************************************************************************
	函数：rnd_next
	功能：先将指针移动到要读取行的开头，然后读取一行数据，如果该行已被删除，则返回NULL
	input：指向storageNode节点的指针
	output：读取到的一行数据
**************************************************************************************************************/
char* rnd_next(storageNode* sp);

/************************************************************************************************************
	函数：write_row
	功能：将字符串row中的数据写入文件的末尾
	input：指向storageNode节点的指针，要写入文件的字符串row
	output：数据写入成功则返回true，否则返回false
*************************************************************************************************************/
bool write_row(storageNode* sp,char* row);

/***********************************************************************************************************
	函数：position
	功能：将sp节点中currentpos成员的值赋给position成员。用于在读、写文件功能转换时保存之前读文件的指针位置，方便后续还原读取指针位置
	input：指向storageNode节点的指针sp
	output：void
*************************************************************************************************************/
void position(storageNode* sp);

/***********************************************************************************************************
	函数：rnd_pos
	功能：将读取指针移动到
	input：
	output：
*************************************************************************************************************/
char* rnd_pos(storageNode* sp);

/***********************************************************************************************************
	函数：update_row
	功能：在物理文件中，将指定的行更新
	input：指向storageNode节点的指针，更新后的行row（字符串类型）
	output：更新成功则返回true，否则返回false
*************************************************************************************************************/
bool update_row(storageNode* sp,char* row);

/***********************************************************************************************************
	函数：delete_row
	功能：删除指定的行
	input：指向storageNode节点的指针
	output：删除成功，返回true；否则返回false
*************************************************************************************************************/
bool delete_row(storageNode* sp);


/***********************************************************************************************************
	函数：isEOF
	功能：判断当前读取指针是否在文件末尾
	input：指向storageNode节点的指针
	output：若读取指针在文件末尾，返回true；否则返回false
*************************************************************************************************************/
bool isEOF(storageNode* sp);

#endif // !STORAGEENGINE_H
